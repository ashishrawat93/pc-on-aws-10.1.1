    {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "AWS Cloud Formation Template for deploying Informatica PowerCenter Version 10.1.1 on EC2 Windows 2012 R2 instances. This template uses an existing VPC and two Private and Public subnets. It deploys an Instance of Amazon RDS with Oracle Database on the Private Subnet. The Informatica PowerCenter Instanes are deployed in the Public Subnet. The template deploys resources over two Availability Zones.",
        "Metadata": {
            "AWS::CloudFormation::Interface": {
                "ParameterGroups": [
                    {
                        "Label": {
                            "default": "Network Configuration"
                        },
                        "Parameters": [
                            "VPCID",
                            "PublicSubnet1ID",
                            "PublicSubnet2ID",
                            "DBSubnetIDs",
                            "RemoteAccessCIDR"
                        ]
                    },
                    {
                        "Label": {
                            "default": "Amazon EC2 Configuration"
                        },
                        "Parameters": [
                            "KeyPairName",
                            "PowerCenterInstanceType",
                            "NumberOfPowerCenterInstances"
                        ]
                    },
                    {
                        "Label": {
                            "default": "Amazon RDS Configuration"
                        },
                        "Parameters": [
                            "DatabaseType",
                            "DatabaseUsername",
                            "DatabasePassword"
                        ]
                    },
                    {
                        "Label": {
                            "default": "Informatica PowerCenter Configuration"
                        },
                        "Parameters": [
                            "InformaticaDomainName",
                            "InformaticaNodeName",
                            "InformaticaDomainUsername",
                            "InformaticaDomainPassword",
                            "EncryptionKeyPhrase",
                            "LicenseKey"
                        ]
                    }
                ],
                "ParameterLabels": {
                    "DBSubnetIDs": {
                        "default": "Informatica Database Subnets"
                    },
                    "DatabasePassword": {
                        "default": "Database Password"
                    },
                    "DatabaseType": {
                        "default": "Database Type"
                    },
                    "DatabaseUsername": {
                        "default": "Database Username"
                    },
                    "EncryptionKeyPhrase": {
                        "default": "Encryption Key Phrase"
                    },
                    "InformaticaDomainName": {
                        "default": "Informatica Domain Name"
                    },
                    "InformaticaNodeName": {
                        "default": "Informatica Node Prefix"
                    },
                    "InformaticaDomainUsername": {
                        "default": "Informatica Administrator Username"
                    },
                    "InformaticaDomainPassword": {
                        "default": "Informatica Administrator Password"
                    },
                    "KeyPairName": {
                        "default": "Key Pair Name"
                    },
                    "NumberOfPowerCenterInstances": {
                        "default": "Number of Instances"
                    },
                    "PowerCenterInstanceType": {
                        "default": "Informatica Domain Instance Type"
                    },
                    "PublicSubnet1ID": {
                        "default": "Public Subnet 1 ID"
                    },
                    "PublicSubnet2ID": {
                        "default": "Public Subnet 2 ID"
                    },
                    "RemoteAccessCIDR": {
                        "default": "Allowed Remote Access CIDR"
                    },
                    "VPCID": {
                        "default": "VPC ID"
                    },
                    "LicenseKey": {
                        "default": "License Key"
                    }
                }
            }
        },
        "Parameters": {
            "DBSubnetIDs": {
                "Description": "Select two subnet IDs each from a different region in the VPC chosen above (such as: us-west-1b, us-west-1c)",
                "Type": "List<AWS::EC2::Subnet::Id>"
            },
            "DatabasePassword": {
                "Description": "Password for the Amazon RDS database account",
                "MaxLength": "18",
                "MinLength": "8",
                "NoEcho": "True",
                "Type": "String"
            },
            "DatabaseType": {
                "AllowedValues": [
                    "Oracle-License-Included",
                    "Oracle-Bring-Your-Own-License"
                ],
                "Default": "Oracle-License-Included",
                "Description": "The type of database to use in Amazon RDS. Currently, you can only use Oracle",
                "Type": "String"
            },
            "DatabaseUsername": {
                "Description": "Username for the Amazon RDS database account",
                "MaxLength": "30",
                "MinLength": "2",
                "Type": "String"
            },
            "EncryptionKeyPhrase": {
                "AllowedPattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,}$",
                "ConstraintDescription": "It should be 8 to 20 characters long, at least one uppercase letter at least one lowercase letter-at least one number Does not contain spaces",
                "Description": "The text string used as the base word from which to generate an encryption key for the Informatica domain.",
                "MaxLength": "32",
                "MinLength": "8",
                "NoEcho": "true",
                "Type": "String"
            },
            "InformaticaDomainName": {
                "Description": "Name for the Informatica Domain.",
                "Type": "String",
                "Default": "InfaDomain",
                "MinLength": "4",
                "MaxLength": "20"
            },
            "InformaticaNodeName": {
                "Description": "Prefix for the Nodes in Informatica Domain. Node number will be the suffix for the nodes. Eg PowerCenterNode1, PowerCenterNode2",
                "Type": "String",
                "Default": "PowerCenter",
                "MinLength": "2",
                "MaxLength": "20"
            },
            "InformaticaDomainUsername": {
                "Description": "Username for the Informatica Domain.",
                "Default": "Administrator",
                "MaxLength": "32",
                "MinLength": "8",
                "Type": "String"
            },
            "InformaticaDomainPassword": {
                "Description": "Password for the Informatica Domain. Administrator is the default Username for Informatica Domain",
                "NoEcho": "True",
                "Type": "String"
            },
            "KeyPairName": {
                "Description": "Name of an existing EC2 KeyPair to enable external access to the Informatica Domain",
                "Type": "AWS::EC2::KeyPair::KeyName"
            },
            "NumberOfPowerCenterInstances": {
                "Description": "Number of PowerCenter Nodes. Each node runs on one EC2 Instance",
                "Type": "String",
                "AllowedValues": [
                    "1",
                    "2",
                    "4",
                    "6",
                    "8"
                ],
                "Default": "4"
            },
            "PowerCenterInstanceType": {
                "AllowedValues": [
                    "c4.xlarge",
                    "c4.2xlarge",
                    "c4.4xlarge",
                    "c4.8xlarge",
                    "r3.large",
                    "r3.xlarge",
                    "r3.2xlarge",
                    "r3.4xlarge",
                    "r3.8xlarge"
                ],
                "Default": "c4.2xlarge",
                "Description": "Instance Type for Informatica Domain. Default is c4.2xlarge",
                "Type": "String"
            },
            "PublicSubnet1ID": {
                "Description": "Select a publicly accessible subnet ID located in Availability Zone 1 for the Informatica Domain",
                "Type": "AWS::EC2::Subnet::Id"
            },
            "PublicSubnet2ID": {
                "Description": "Select a publicly accessible subnet ID located in Availability Zone 2 for the Informatica Domain",
                "Type": "AWS::EC2::Subnet::Id"
            },
            "RemoteAccessCIDR": {
                "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
                "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
                "Description": "Allowed CIDR block for external access to the Informatica Domain",
                "Type": "String"
            },
            "VPCID": {
                "Description": "Which VPC should this be deployed to?",
                "Type": "AWS::EC2::VPC::Id"
            },
            "LicenseKey": {
                "Description": "Informatica License Key. Provide a PUBLIC S3 link for the License Key. Optional Argument. Leave unassigned to go ahead without the Licence Key.",
                "Type": "String",
                "Default": "unassigned"
            }
        },
        "Rules": {
            "SubnetsInVPC": {
                "Assertions": [
                    {
                        "Assert": {
                            "Fn::EachMemberIn": [
                                {
                                    "Fn::ValueOfAll": [
                                        "AWS::EC2::Subnet::Id",
                                        "VpcId"
                                    ]
                                },
                                {
                                    "Fn::RefAll": "AWS::EC2::VPC::Id"
                                }
                            ]
                        },
                        "AssertDescription": "All subnets must in the VPC"
                    }
                ]
            }
        },
        "Mappings": {
            "AWSAMIRegionMap": {
                "AMI": {
                    "INFORMATICAPCWINHVM": "Informatica-PowerCenter-10.1.1-WindowsServer2012R2-73eb10f0-ef93-494a-bff4-de78cbe56fcb-ami-611e3276.3"
                },
                "ap-northeast-1": {
                    "INFORMATICAPCWINHVM": "ami-6b862d0a"
                },
                "ap-northeast-2": {
                    "INFORMATICAPCWINHVM": "TBD"
                },
                "ap-south-1": {
                    "INFORMATICAPCWINHVM": "TBD"
                },
                "ap-southeast-1": {
                    "INFORMATICAPCWINHVM": "ami-0ecbcd19"
                },
                "ap-southeast-2": {
                    "INFORMATICAPCWINHVM": "ami-ebb48b88"
                },
                "eu-central-1": {
                    "INFORMATICAPCWINHVM": "ami-11a4617e"
                },
                "eu-west-1": {
                    "INFORMATICAPCWINHVM": "ami-3db3e34e"
                },
                "sa-east-1": {
                    "INFORMATICAPCWINHVM": "ami-c872eda4"
                },
                "us-east-1": {
                    "INFORMATICAPCWINHVM": "ami-6c73797b"
                },
                "us-east-2": {
                    "INFORMATICAPCWINHVM": "TBD"
                },
                "us-west-1": {
                    "INFORMATICAPCWINHVM": "ami-329fca52"
                },
                "us-west-2": {
                    "INFORMATICAPCWINHVM": "ami-d42d8fb4"
                }
            },
            "Config": {
                "Settings": {
                    "DatabaseName": "pc",
                    "DatabaseSize": "db.t2.large",
                    "IntegrationServiceName": "PowerCenterIntegrationService",
                    "RepositoryServiceName": "PowerCenterRepository",
                    "GridName": "InfaDefaultGrid"
                },
                "Oracle-License-Included": {
                    "Engine": "oracle-se1",
                    "DB": "Oracle",
                    "LicenseModel": "license-included",
                    "AllocatedStorage": "50",
                    "Port": 1521
                },
                "Oracle-Bring-Your-Own-License": {
                    "Engine": "oracle-se1",
                    "DB": "Oracle",
                    "LicenseModel": "bring-your-own-license",
                    "AllocatedStorage": "50",
                    "Port": 1521
                }
            }
        },
        "Conditions": {
            "AddLicenseCondition": {
                "Fn::Not": [
                    {
                        "Fn::Equals": [
                            {
                                "Ref": "LicenseKey"
                            },
                            "unassigned"
                        ]
                    }
                ]
            },
            "2NodeCondition": {
                "Fn::Or": [
                    {
                        "Fn::Equals": [
                            {
                                "Ref": "NumberOfPowerCenterInstances"
                            },
                            "2"
                        ]
                    },
                    {
                        "Condition": "4NodeCondition"
                    },
                    {
                        "Condition": "6NodeCondition"
                    },
                    {
                        "Condition": "8NodeCondition"
                    }
                ]
            },
            "4NodeCondition": {
                "Fn::Or": [
                    {
                        "Fn::Equals": [
                            {
                                "Ref": "NumberOfPowerCenterInstances"
                            },
                            "4"
                        ]
                    },
                    {
                        "Condition": "6NodeCondition"
                    },
                    {
                        "Condition": "8NodeCondition"
                    }
                ]
            },
            "6NodeCondition": {
                "Fn::Or": [
                    {
                        "Fn::Equals": [
                            {
                                "Ref": "NumberOfPowerCenterInstances"
                            },
                            "6"
                        ]
                    },
                    {
                        "Condition": "8NodeCondition"
                    }
                ]
            },
            "8NodeCondition": {
                "Fn::Equals": [
                    {
                        "Ref": "NumberOfPowerCenterInstances"
                    },
                    "8"
                ]
            }
        },
        "Resources": {
            "DBSubnetGroup": {
                "Type": "AWS::RDS::DBSubnetGroup",
                "Properties": {
                    "DBSubnetGroupDescription": "Subnet Group for Informatica PowerCenter RDS Database",
                    "SubnetIds": {
                        "Ref": "DBSubnetIDs"
                    },
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "RDSDbSubnetGroup"
                        }
                    ]
                }
            },
            "DBSecurityGroup": {
                "Type": "AWS::EC2::SecurityGroup",
                "Properties": {
                    "GroupDescription": "Informatica PowerCenter RDS Database Security Group",
                    "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": {
                                "Fn::FindInMap": [
                                    "Config",
                                    {
                                        "Ref": "DatabaseType"
                                    },
                                    "Port"
                                ]
                            },
                            "ToPort": {
                                "Fn::FindInMap": [
                                    "Config",
                                    {
                                        "Ref": "DatabaseType"
                                    },
                                    "Port"
                                ]
                            },
                            "SourceSecurityGroupId": {
                                "Ref": "InstanceSecurityGroup"
                            }
                        }
                    ],
                    "VpcId": {
                        "Ref": "VPCID"
                    }
                }
            },
            "RDSInstance": {
                "Type": "AWS::RDS::DBInstance",
                "Properties": {
                    "AllocatedStorage": {
                        "Fn::FindInMap": [
                            "Config",
                            {
                                "Ref": "DatabaseType"
                            },
                            "AllocatedStorage"
                        ]
                    },
                    "DBInstanceClass": {
                        "Fn::FindInMap": [
                            "Config",
                            "Settings",
                            "DatabaseSize"
                        ]
                    },
                    "DBName": {
                        "Fn::FindInMap": [
                            "Config",
                            "Settings",
                            "DatabaseName"
                        ]
                    },
                    "DBSubnetGroupName": {
                        "Ref": "DBSubnetGroup"
                    },
                    "Engine": {
                        "Fn::FindInMap": [
                            "Config",
                            {
                                "Ref": "DatabaseType"
                            },
                            "Engine"
                        ]
                    },
                    "LicenseModel": {
                        "Fn::FindInMap": [
                            "Config",
                            {
                                "Ref": "DatabaseType"
                            },
                            "LicenseModel"
                        ]
                    },
                    "MasterUsername": {
                        "Ref": "DatabaseUsername"
                    },
                    "MasterUserPassword": {
                        "Ref": "DatabasePassword"
                    },
                    "MultiAZ": true,
                    "Port": {
                        "Fn::FindInMap": [
                            "Config",
                            {
                                "Ref": "DatabaseType"
                            },
                            "Port"
                        ]
                    },
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "Infa-PowerCenter-RDS-Instance"
                        }
                    ],
                    "VPCSecurityGroups": [
                        {
                            "Ref": "DBSecurityGroup"
                        }
                    ]
                }
            },
            "InstanceSecurityGroup": {
                "Type": "AWS::EC2::SecurityGroup",
                "Properties": {
                    "GroupDescription": "Enable RDP and within VPC traffic",
                    "VpcId": {
                        "Ref": "VPCID"
                    },
                    "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "3389",
                            "ToPort": "3389",
                            "CidrIp": {
                                "Ref": "RemoteAccessCIDR"
                            }
                        },
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "5000",
                            "ToPort": "7000",
                            "CidrIp": {
                                "Ref": "RemoteAccessCIDR"
                            }
                        }
                    ]
                }
            },
            "InstanceSecurityGroupIngress": {
                "DependsOn": "InstanceSecurityGroup",
                "Type": "AWS::EC2::SecurityGroupIngress",
                "Properties": {
                    "IpProtocol": "-1",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "SourceSecurityGroupId": {
                        "Fn::GetAtt": [
                            "InstanceSecurityGroup",
                            "GroupId"
                        ]
                    },
                    "GroupId": {
                        "Fn::GetAtt": [
                            "InstanceSecurityGroup",
                            "GroupId"
                        ]
                    }
                }
            },
            "InfaMasterEIPAddress": {
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaMaster"
                    }
                }
            },
            "InfaMaster": {
                "DependsOn": "RDSInstance",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "files": {
                                "c:\\Informatica\\10.1.1\\License.key": {
                                    "source": {
                                        "Fn::If": [
                                            "AddLicenseCondition",
                                            {
                                                "Ref": "LicenseKey"
                                            },
                                            "https://s3-ap-southeast-1.amazonaws.com/cnfscripts/NotFound.txt"
                                        ]
                                    }
                                }
                            },
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node1"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=1 \n",
                                    "$env:JOIN_DOMAIN=0 \n",
                                    "$env:SERVES_AS_GATEWAY=0 \n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:REPOSITORY_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "RepositoryServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:REPO_USER=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:INFORMATICA_SERVICES=\"2",
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"Informatica_NotApplicable_NodeName\" \n",
                                    "$env:DOMAIN_HOST_NAME=\"$env:COMPUTERNAME\" \n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init.exe -v -s ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaMaster ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaMaster ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT3H"
                    }
                }
            },
            "InfaNode2EIPAddress": {
                "Condition": "2NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode2"
                    }
                }
            },
            "InfaNode2": {
                "Condition": "2NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node2"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node2"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode2 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode2 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            },
            "InfaNode3EIPAddress": {
                "Condition": "4NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode3"
                    }
                }
            },
            "InfaNode3": {
                "Condition": "4NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node3"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node3"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode3 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode3 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            },
            "InfaNode4EIPAddress": {
                "Condition": "4NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode4"
                    }
                }
            },
            "InfaNode4": {
                "Condition": "4NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node4"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node4"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode4 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode4 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            },
            "InfaNode5EIPAddress": {
                "Condition": "6NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode5"
                    }
                }
            },
            "InfaNode5": {
                "Condition": "6NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node5"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node5"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode5 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode5 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            },
            "InfaNode6EIPAddress": {
                "Condition": "6NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode6"
                    }
                }
            },
            "InfaNode6": {
                "Condition": "6NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node6"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node6"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode6 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode6 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            },
            "InfaNode7EIPAddress": {
                "Condition": "8NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode7"
                    }
                }
            },
            "InfaNode7": {
                "Condition": "8NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node7"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node7"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode7 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode7 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "</powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            },
            "InfaNode8EIPAddress": {
                "Condition": "8NodeCondition",
                "Type": "AWS::EC2::EIP",
                "Properties": {
                    "Domain": "vpc",
                    "InstanceId": {
                        "Ref": "InfaNode8"
                    }
                }
            },
            "InfaNode8": {
                "Condition": "8NodeCondition",
                "DependsOn": "InfaMaster",
                "Type": "AWS::EC2::Instance",
                "Metadata": {
                    "AWS::CloudFormation::Init": {
                        "config": {
                            "commands": {
                                "1-setup": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ",
                                                {
                                                    "Ref": "InformaticaDomainPassword"
                                                },
                                                " ",
                                                {
                                                    "Ref": "DatabasePassword"
                                                },
                                                " null ",
                                                {
                                                    "Ref": "EncryptionKeyPhrase"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "Properties": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Ref": "InformaticaNodeName"
                                        },
                                        "Node8"
                                    ]
                                ]
                            }
                        }
                    ],
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "INFORMATICAPCWINHVM"
                        ]
                    },
                    "SubnetId": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "SecurityGroupIds": [
                        {
                            "Ref": "InstanceSecurityGroup"
                        }
                    ],
                    "InstanceType": {
                        "Ref": "PowerCenterInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "",
                                [
                                    "<powershell>\n",
                                    "echo \"Initializing variables\" \n",
                                    "$env:CREATE_DOMAIN=0 \n",
                                    "$env:JOIN_DOMAIN=1 \n",
                                    "$env:SERVES_AS_GATEWAY=1",
                                    "\n",
                                    "$env:DOMAIN_USER_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainUsername"
                                    },
                                    "\"\n",
                                    "$env:AWS_REGION=\"",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\"\n",
                                    "$env:DB_TYPE=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            {
                                                "Ref": "DatabaseType"
                                            },
                                            "DB"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_ADDRESS=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Address"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_PORT=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "RDSInstance",
                                            "Endpoint.Port"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DB_UNAME=\"",
                                    {
                                        "Ref": "DatabaseUsername"
                                    },
                                    "\"\n",
                                    "$env:DB_SERVICENAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "DatabaseName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_NAME=\"",
                                    {
                                        "Ref": "InformaticaDomainName"
                                    },
                                    "\"\n",
                                    "$env:NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node1"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:GRID_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "GridName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:JOIN_NODE_NAME=\"",
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Ref": "InformaticaNodeName"
                                                },
                                                "Node8"
                                            ]
                                        ]
                                    },
                                    "\"\n",
                                    "$env:INTEGRATION_SERVICE_NAME=\"",
                                    {
                                        "Fn::FindInMap": [
                                            "Config",
                                            "Settings",
                                            "IntegrationServiceName"
                                        ]
                                    },
                                    "\"\n",
                                    "$env:DOMAIN_HOST_NAME=\"",
                                    {
                                        "Fn::GetAtt": [
                                            "InfaMaster",
                                            "PrivateIp"
                                        ]
                                    },
                                    "\"\n",
                                    "echo \"running cfn init\" \n",
                                    "cfn-init --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode8 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "echo \"running cfn signal\" \n",
                                    "cfn-signal -e $LASTEXITCODE ",
                                    " --stack ",
                                    {
                                        "Ref": "AWS::StackId"
                                    },
                                    " --resource InfaNode8 ",
                                    " --region ",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "\n",
                                    "<powershell>"
                                ]
                            ]
                        }
                    }
                },
                "CreationPolicy": {
                    "ResourceSignal": {
                        "Timeout": "PT2H30M"
                    }
                }
            }
        },
        "Outputs": {
            "PowerCenterAgentIP": {
                "Value": {
                    "Fn::GetAtt": [
                        "InfaMaster",
                        "PublicIp"
                    ]
                },
                "Description": "Elastic IP address of the PowerCenter instance"
            },
            "InstanceID": {
                "Description": "Instance ID of the newly created EC2 Master instance",
                "Value": {
                    "Ref": "InfaMaster"
                }
            },
            "AvailabilityZone": {
                "Description": "Availability Zone of the newly created EC2 instances",
                "Value": {
                    "Fn::GetAtt": [
                        "InfaMaster",
                        "AvailabilityZone"
                    ]
                }
            },
            "PublicDNS": {
                "Description": "Public DNS name of the newly created EC2 Master instance",
                "Value": {
                    "Fn::GetAtt": [
                        "InfaMaster",
                        "PublicDnsName"
                    ]
                }
            },
            "RDSInstance": {
                "Value": {
                    "Ref": "RDSInstance"
                },
                "Description": "RDS Instance ID"
            }
        }
    }